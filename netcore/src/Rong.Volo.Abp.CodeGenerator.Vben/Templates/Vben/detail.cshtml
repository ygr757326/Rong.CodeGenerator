@using Rong.Volo.Abp.CodeGenerator.Vue.Models
@inherits Volo.Abp.TextTemplating.Razor.RazorTemplatePageBase<TemplateVueDetailModel>
@{
}
<template>
  <!--  详情页面 -->
  <div class="detail" ref="detailContentRef">
      <a-descriptions bordered :column="props.column" size="small" :labelStyle="width">
          @Model.DetailTemplate
      </a-descriptions>
  </div>
</template>

<script setup lang="ts">

  import { @{@Model.Entity}Get } from '../api';
  import { ref, nextTick } from 'vue';
  import { useI18n } from '@@/hooks/web/useI18n';
  import { useLoading } from '@@/components/Loading';
  import { formatToDate } from '@@/utils/dateUtil';
  import { useDictStore } from '@@/store/modules/dict';
  import { useEnumStore } from '@@/store/modules/enum';

  const dictStore = useDictStore();
  const enumStore = useEnumStore();
  const detailContentRef = ref(null);
  const { t } = useI18n();
  const [openWrapLoading, closeWrapLoading] = useLoading({
    target: detailContentRef,
    props: {
      absolute: true,
    },
  });
  const props = defineProps({
    id: { type: String, default: '' },
    column: { type: Object, default: { xxl: 1, xl: 1, lg: 1, md: 1, sm: 1, xs: 1 } },
  });
  // 宽度css属性
  const width = {
    width: '120px',
    'justify-content': 'flex-end',
  };

  let detailData: any = ref({});

  /**
   * 获取详情
   */
  function getData(data) {
      @{@Model.Entity}Get(data.id).then((res) => {
        detailData.value = res;
      })
      .finally(() => {
        closeWrapLoading();
      });
  }

  /**
   * 初始化
   */
  function init(data) {
    nextTick(() => {
      openWrapLoading();
    });
    detailData.value = {};
    getData(data);
  }
  defineExpose({ init });

</script>

<style lang="less" scoped>
  .title {
    margin-top: 20px;
    font-size: 18px;
    font-weight: bold;
  }

  .contentBox {
    min-height: 500px;
    padding: 10px;
    border: 1px solid #ccc;
  }
</style>
