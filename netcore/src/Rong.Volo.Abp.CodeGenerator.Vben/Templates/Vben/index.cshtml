@using Rong.Volo.Abp.CodeGenerator.Vue.Models.Pages
@inherits Volo.Abp.TextTemplating.Razor.RazorTemplatePageBase<TemplateVuePageIndexModel>
@{

}
<template>
  <PageWrapper contentFullHeight>
      <BasicTable @@register="register">
      <template #toolbar>
        <a-button auth="@Model.EntityInfo.Permission.Create" type="primary" style="margin-right: 20px" @@click="handleCreate">添加</a-button>
      </template>
       <template #action="{ record }">
        <TableAction
          :actions="[
            {
              auth:'@Model.EntityInfo.Permission.Update',
              label: '编辑',
              onClick: handleEdit.bind(null, record),
            },
            { 
              auth:'@Model.EntityInfo.Permission.Index',
              label: '查看',
              onClick: handleDetail.bind(null, record),
            },
          ]"
          :dropDownActions="[
            {
              auth:'@Model.EntityInfo.Permission.Delete',
              label: '删除',
              popConfirm: {
                title: '是否删除？',
                confirm: handleDelete.bind(null, record),
              },
            },
          ]"
        />
       </template>                    
@Model.TableColumnsSlotsTemplate
    </BasicTable>
    <!-- 新增 -->
    <Add ref="addRef" @@success="handleSuccess"></Add>
    <!-- 编辑 -->
    <Modify ref="modifyRef" @@success="handleSuccess" />
    <!-- 查看 -->
    <DetailDrawer ref="detailDrawerRef" />
  </PageWrapper>
</template>

<script lang="ts" setup>
  import { Tag } from 'ant-design-vue';
  import { ref } from 'vue';
  import Add from './components/add.vue';
  import Modify from './components/modify.vue';
  import DetailDrawer from './components/detailDrawer.vue';
  import { AbsViewModal } from '#/common';
  import { @{@Model.EntityInfo.Entity}Delete, @{@Model.EntityInfo.Entity}GetList } from './api';
  import { PageWrapper } from '@@/components/Page';
  import { BasicColumn, BasicTable, FormSchema, TableAction, useTable } from '@@/components/Table';
  import myComponentSetting from '@@/settings/myComponentSetting';
  import { formatToDate } from '@@/utils/dateUtil';
  import { useDictStore } from '@@/store/modules/dict';
  import { useEnumStore } from '@@/store/modules/enum';

  const dictStore = useDictStore();
  const enumStore = useEnumStore();
  const addRef = ref<AbsViewModal | null>(null);
  const modifyRef = ref<AbsViewModal | null>(null);
  const detailDrawerRef = ref<AbsViewModal | null>(null);

  /**
    * 表头
   */
  const columns: BasicColumn[] = [
@Model.TableColumnsTemplate
  ];
  
    /**
    * 查询
    */
  const schemas: FormSchema[] = [
@Model.TableSchemasTemplate
   ];

  /**
   * 表头配置
   */
  const [register, { reload }] = useTable({
    api: @{@Model.EntityInfo.Entity}GetList,
    columns,
    showTableSetting: true,
    tableSetting: {
      redo: true,
      size: true,
      setting: true,
      fullScreen: true,
    },
    actionColumn: {
      width: 160,
      title: '操作',
      dataIndex: 'action',
      slots: { customRender: 'action' },
      fixed: 'right',
    },
    useSearchForm: true,
    formConfig: {
      ...myComponentSetting.table.formConfig,
      schemas: schemas,
    },
  });
  
  /**
   * 点击添加
   */
  function handleCreate() {
    addRef.value?.open();
  }

  /**
   * 点击编辑
   */
  function handleEdit(record: Recordable) {
    modifyRef.value?.open({
      id: record.id,
    });
  }

  /**
   * 点击详情
   */
  function handleDetail(record: Recordable) {
    detailDrawerRef.value?.open({
      id: record.id,
    });
  }
  
  /**
   * 点击删除
   */
  async function handleDelete(record: Recordable) {
    await @{@Model.EntityInfo.Entity}Delete(record.id);
    reload();
  }

  /**
   * 编辑/新增成功 - 刷新table
   */
  function handleSuccess() {
    reload();
  }
</script>

<style lang="less" scoped></style>
