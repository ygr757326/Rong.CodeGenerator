<template>
  <a-drawer v-model:visible="visible" :title="title" width="800px">
    <template #extra>
      <a-button @click="visible = false">取消</a-button>
      <a-button @click="handleSubmit" type="primary" style="margin-left: 20px">提交</a-button>
    </template>
    <div>
      <BasicForm @register="Register">
        <template #healthAttachs="{ model, field }">
          <GzUploadFile v-model="model[field]" :multiple="true" listType="text"></GzUploadFile>
        </template>
      </BasicForm>
    </div>
  </a-drawer>
</template>

<script lang="ts" setup>
  import { nextTick, ref } from 'vue';
  import { post${titleCase(
    folderName
  )}Create } from '@/api/${firstLowCase(titleCase(folderName))}/${firstLowCase(titleCase(folderName))}';
  import { GzUploadFile } from '@/components/GzUploadFile';
  import { BasicForm, FormSchema, useForm } from '@/components/Form/index';

  const visible = ref<Boolean>(false);
  const title = ref<string>('新增');
  const $emit = defineEmits(['success']);

  function open() {
    visible.value = true;
    nextTick(() => {
      resetFields();
    });
  }
  /**
   * 提交表单
   */
  async function handleSubmit() {
    await validateFields();
    const data: any = getFieldsValue();
    await post${titleCase(folderName)}Create(data);
    visible.value = false;
    $emit('success');
  }

  // 表单配置
  const schemas: FormSchema[] = [
    ${formSchema.join(",")}
  ];
  //   微信表单配置
  const [Register, { validateFields, getFieldsValue, resetFields }] = useForm({
    labelWidth: 120,
    schemas,
    actionColOptions: {
      span: 12,
    },
    // 隐藏操作按钮
    showActionButtonGroup: false,
  });
  defineExpose({ open });
</script>